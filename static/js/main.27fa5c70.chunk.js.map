{"version":3,"sources":["components/quote/Quote.js","components/tweet-quote/TweetQuote.js","containers/quote-container/QuoteContainer.js","App.js","reportWebVitals.js","index.js"],"names":["Quote","props","quote","state","author","className","id","TweetQuote","href","generateRandonNum","length","Math","floor","random","QuoteContainer","initialRandomNumber","useState","newQuote","setNewQuote","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0TAoBeA,EAjBD,SAACC,GACf,IAAMC,EAAQD,EAAME,MAAM,GACpBC,EAASH,EAAME,MAAM,GAE3B,OACI,sBAAKE,UAAY,mBAAjB,UACE,sBAAKC,GAAG,OAAR,UACE,2CACGJ,EACH,8CAEF,sBAAKI,GAAG,SAAR,oBAA2BF,SCHlBG,G,MARI,WACjB,OACE,mBAAGC,KAAK,2BAA2BF,GAAG,cAAtC,SACE,mBAAGD,UAAU,8BCDbI,G,MAAoB,SAACC,GAAD,OAAYC,KAAKC,MAAMD,KAAKE,SAASH,KAElDI,EAAiB,SAACb,GAC7B,IAAME,EAAQF,EAAME,MACdY,EAAsBZ,EAAMM,EAAkBR,EAAME,MAAMO,SAChE,EAAgCM,mBAASD,GAAzC,mBAAOE,EAAP,KAAiBC,EAAjB,KAOA,OACE,sBAAKZ,GAAG,YAAR,UACI,cAAC,EAAD,CAAOH,MAASc,IAChB,sBAAKZ,UAAU,UAAf,UACE,cAAC,EAAD,IACA,wBAAQC,GAAG,YAAYa,QATX,WAClBD,EAAYf,EAAMM,EAAkBR,EAAME,MAAMO,WAQ1C,8BCkCKU,MApDf,WA6CE,OACE,qBAAKf,UAAU,MAAf,SACE,cAAC,EAAD,CAAgBF,MA7CL,CACb,CAAC,sCAAuC,gBACxC,CACE,2EACA,gBAEF,CACE,uEACA,gBAEF,CACE,4EACA,qBAEF,CACE,oLACA,aAEF,CAAC,wCAAoC,uBACrC,CAAC,mCAAoC,mBACrC,CAAC,6BAA8B,iBAC/B,CACE,yEACA,iBAEF,CAAC,QAAS,iBACV,CAAC,WAAY,iBACb,CACE,gFACA,iBAEF,CACE,0FACA,iBAEF,CAAC,2DAA4D,iBAC7D,CACE,gIACA,uBChCSkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.27fa5c70.chunk.js","sourcesContent":["import React from 'react';\nimport './Quote.scss';\n\nconst Quote = (props) => {\nconst quote = props.state[0];\nconst author = props.state[1];\n\nreturn(\n    <div className = 'quote-and-author'>\n      <div id=\"text\" >\n        <span>&ldquo; </span>\n          {quote}\n        <span> &rdquo;</span>\n      </div>\n      <div id=\"author\" >&mdash; {author}</div>\n\n    </div>\n  )\n}\n\nexport default Quote;","import React from \"react\";\nimport './TweetQuote.scss';\n\nconst TweetQuote = () => {\n  return(\n    <a href=\"twitter.com/intent/tweet\" id=\"tweet-quote\">\n      <i className=\"fab fa-twitter-square\"></i>\n    </a> \n   )\n}\n\nexport default TweetQuote;","import React, { useState } from 'react';\nimport Quote from '../../components/quote/Quote';\nimport TweetQuote from '../../components/tweet-quote/TweetQuote';\nimport './QuoteContainer.scss';\n\nconst generateRandonNum = (length) => Math.floor(Math.random()*length) \n\nexport const QuoteContainer = (props) => {\n  const state = props.state;\n  const initialRandomNumber = state[generateRandonNum(props.state.length)];\n  const [newQuote, setNewQuote] = useState(initialRandomNumber);\n  \n  \n  const handleClick = () => {\n    setNewQuote(state[generateRandonNum(props.state.length)])\n  }\n\n  return(\n    <div id=\"quote-box\">\n        <Quote state = {newQuote} />\n        <div className=\"buttons\">\n          <TweetQuote />\n          <button id='new-quote' onClick={handleClick} >New quote</button>\n        </div>\n    </div>\n  )\n}","import React from 'react';\nimport './App.scss';\nimport { QuoteContainer } from './containers/quote-container/QuoteContainer';\n\nfunction App() {\n\n  const  state = [\n    [\"Me fail English? That's unpossible.\", \"Ralph Wiggum\"],\n    [\n      \"I’d rather let a thousand guilty men go free than chase after them.\",\n      \"Chief Wiggum\"\n    ],\n    [\n      \"Shoplifting is a victimless crime. Like punching someone in the dark\",\n      \"Nelson Muntz\"\n    ],\n    [\n      \"Skinner said the teachers will crack any minute Purple Monkey Dishwasher.\",\n      \"Principal Skinner\"\n    ],\n    [\n      \"This anonymous clan of slack-jawed troglodytes has cost me the election. And yet, if I were to have them killed, I would be the one to go to jail. That’s democracy for you.\",\n      \"Mr. Burns\"\n    ],\n    [\"Everything’s coming up Milhouse!\", \"Milhouse Van Houten\"],\n    [\"My eyes! The goggles do nothing!\", \"Radioactive Man\"],\n    ['I call the big one \"Bitey\"', \"Homer Simpson\"],\n    [\n      \"To alcohol! The cause of... and solution to... all of life's problems.\",\n      \"Homer Simpson\"\n    ],\n    [\"D'Oh!\", \"Homer Simpson\"],\n    [\"Woo-Hoo!\", \"Homer Simpson\"],\n    [\n      \"Kids, you tried your best and you failed miserably. The lesson is, never try.\",\n      \"Homer Simpson\"\n    ],\n    [\n      \"Facts are meaningless. You could use facts to prove anything that's even remotely true.\",\n      \"Homer Simpson\"\n    ],\n    [\"I am so smart! I am so smart! S-M-R-T! I mean S-M-A-R-T!\", \"Homer Simpson\"],\n    [\n      \"I've got a problem. As soon as you stop this car, I'm gonna hug you, and kiss you, and then I'll never be able to let you go!\",\n      \"Homer Simpson\"\n    ]\n  ];\n  \n\n  return (\n    <div className=\"App\">\n      <QuoteContainer state = {state}/>\n    </div>\n  )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}